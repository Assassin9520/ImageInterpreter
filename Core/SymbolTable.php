<?php

namespace Core;



/*
	SymbolTable class - stores all the variables , and data structures that out interpreter work with
	php ver 5.5.0
*/
class SymbolTable 
{

	/*the table of variables - in it's simplest form , it is an array*/
	/*The table variables . Here will be stored the variables generated by interpreting instructions*/
	public static $table_variables = [];




	/*METHODS***************************************************************************************************/

	/*
		retrieves entire Symbols table
	*/
	public static function getTable()
	{
		return static::$table_variables;
	}



	/*
		retreives a variable outside of table variable

		@param $var_name the name of variable to return 

		@return mixed the array value if $var_name is found in table variables , false otherwise
	*/
	public static function get($var_name)
	{
		if (array_key_exists($var_name, static::$table_variables)) {
			return static::$table_variables[ $var_name ];
		}
		
		return false;
	}



	/*
		set a symbol in the table

		@param $var_name the name of variable to set in the table
		@param $var_value , the values that will be attached to the name of the variable in table
		@param $var_type , the type of variable (optional)
					types:
						RGB , R, G, B, ARRAY,GRAYSCALE, BINARY_IMAGE ...// to be added

						An image in GrayScale simply means that all of it pixel value(red,green,blue,) are equal to one another
	*/
	public static function set($var_name, $var_value, $var_type = "RGB")
	{
		//only permit this type of variables to be added in Symbol table
		$permitted_types = ["RGB", "R", "G", "B", "ARRAY", "GRAYSCALE", "BINARY_IMAGE" ];
		if ( !in_array($var_type, $permitted_types) ) {
			die("Nu se poate adauga o variabila de acest tip.: " . $var_type );
		}

		//set table_var
		static::$table_variables[ $var_name ] = [
				'value' => $var_value,
				'type'  => $var_type
 			]; 
	}



	/*
		Display the table variables
	*/
	public static function dumpTable($dumpMethod = 'print')
	{
		echo "<pre>";
		if ($dumpMethod == 'print') {
			print_r(static::$table_variables);
		} else {
			var_dump(static::$table_variables);
		}
		
		echo "</pre>";
	}	




}/*end class SymbolTable*/













?>